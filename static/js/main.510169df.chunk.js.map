{"version":3,"sources":["Images/coco6.jpg","Images/coco1.jpg","Images/img4.jpg","Images/img.jpg","Images/img3.jpg","Images/coco02.jpg","Images/coco9.png","Images/coco5.jpg","Images/coco01.jpg","Images/coconut.svg","components/Layout/Register.js","components/Layout/About.js","components/Layout/Slide.js","components/Layout/Spacer.js","components/Layout/Dot.js","components/Layout/SlideShow.js","components/Layout/Home.js","components/Nav/Nav.js","components/Footer/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Register","className","About","href","target","rel","s","memo","position","transition","image","src","alt","w","h","style","width","height","slideId","dotId","Slideshow","props","startCarousel","carouselInterval","setInterval","transitionSlides","setSlideState","slide1","slide2","currentId","setState","state","id","setTimeout","resetSlideOffScreen","slides","length","resetSlideTransitions","this","clearInterval","Component","slide3","slide4","slide5","Home","Coconut1","Coconut2","Coconut3","Coconut4","Coconut5","Coconut6","Navigation","CoconutSVG","to","path","Footer","App","Nav","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.510169df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coco6.bc51ef29.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coco1.1914ff70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img4.71e5ece2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img.3203396c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.e9a49084.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coco02.3caa69da.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coco9.9380ee53.png\";","module.exports = __webpack_public_path__ + \"static/media/coco5.a658cc1f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coco01.87d18efa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coconut.24709fc5.svg\";","import React from 'react';\n\nimport './Custom.css';\n\nconst Register = () => {\n    return(\n        <div className=\"reg container\">\n            <h2 className=\"text-center\">You will sign up here</h2>\n            <div className=\"regContainer\">\n                \n            </div>\n        </div>\n    );\n}\n\nexport default Register;","import React from 'react';\n\nimport './Custom.css';\n\nconst About = () => {\n    return(\n        <div className=\"container\">\n            <div className=\"row\"> \n              <div className=\"w-100 col-lg-12\">\n                  <h2 className=\"text-center\">What we do at Coconut Master</h2>\n                  <div className=\"content row\">\n                    <div className=\"col-md-4 side\"></div>\n                    <div className=\"col-md-8 other text-center\">\n                      <h2>Coconut First. Schemes Later</h2>\n                      <p>we offer qualtiy and fresh cocnut fruit</p>\n                      <h3>Enjoy a fresh coconut water, it is coconut o'clock</h3><hr></hr>\n                      <h4>Kindly check our social media accounts or you call call us on\n                         0542570123 - Whatsapp( 0266215049 )\n                      </h4>\n                      <a href=\"https://web.facebook.com/abigail.larbi\" target=\"_blank\" rel=\"noopener noreferrer\">Facebook</a>\n                      <a href=\"https://www.instagram.com/kenteport/\" target=\"_blank\" rel=\"noopener noreferrer\">Instagram</a>\n                    </div>\n                  </div>\n              </div>\n            </div>\n        </div>\n        \n    );\n}\n\nexport default About;","import React, { memo } from \"react\";\n\nconst s = {\n    container: \"abs fullW fullH\",\n    slideImage: \"fullH fullW imgCover\"\n};\n\n\nconst Slide = ({ position, transition, image }) => {\n    return (\n        <div className={s.container + \" \" + position + \" \" + transition}>\n            <img src={image} className={s.slideImage} alt=\"slide\" />\n        </div>\n    );\n};\n\nexport default memo(Slide);","import React, { memo } from \"react\";\n\nconst Spacer = ({ w, h }) => {\n    if (w) {\n        return <div style={{ width: w }} className=\"fullH\" />;\n    } else if (h) {\n        return <div style={{ height: h }} className=\"fullW\" />;\n    }\n};\n\nexport default memo(Spacer);","import React, { memo } from \"react\";\nimport Spacer from \"./Spacer\";\n\nconst Dot = ({ slideId, dotId }) => (\n    <div className=\"row\">\n        <Spacer w={5} />\n        <div className={\"dot \" + (slideId === dotId ? \"white\" : \"white50\")} />\n        <Spacer w={5} />\n    </div>\n);\n\nexport default memo(Dot);","import React, { Component } from \"react\";\nimport Slide from \"./Slide\";\nimport Dots from \"./Dot\";\n\n\nconst s = {\n    container: \"fullW fullH rel overflowH\",\n    onScreen: \"left0\",\n    offScreenRight: \"left100vw\",\n    offScreenLeft: \"leftM100vw\",\n    transition: \"transition1l\"\n};\n\nclass Slideshow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            slide1: {\n                id: 0,\n                position: s.onScreen,\n                transition: true\n            },\n            slide2: {\n                id: 1,\n                position: s.offScreenRight,\n                transition: true\n            },\n            currentId: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startCarousel();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.carouselInterval);\n    }\n\n    startCarousel = () => {\n        this.carouselInterval = setInterval(() => {\n            this.transitionSlides();\n        }, 4000);\n    };\n\n    setSlideState = (slide1, slide2, currentId) => {\n        this.setState({\n            slide1: slide1,\n            slide2: slide2,\n            currentId: currentId\n        });\n    };\n\n    transitionSlides = () => {\n        const { slide1, slide2 } = this.state;\n        let currentId;\n        if (slide1[\"position\"] === s.onScreen) {\n            slide1[\"position\"] = s.offScreenLeft;\n            slide2[\"position\"] = s.onScreen;\n            currentId = slide2.id;\n        } else {\n            slide1[\"position\"] = s.onScreen;\n            slide2[\"position\"] = s.offScreenLeft;\n            currentId = slide1.id;\n        }\n        this.setSlideState(slide1, slide2, currentId);\n        setTimeout(() => {\n            this.resetSlideOffScreen();\n        }, 1000);\n    };\n\n    resetSlideOffScreen = () => {\n        const { slide1, slide2, currentId } = this.state;\n        const { slides } = this.props;\n        if (slide1[\"position\"] === s.offScreenLeft) {\n            slide1[\"transition\"] = false;\n            slide1[\"position\"] = s.offScreenRight;\n            slide1[\"id\"] = slide2.id + 1 === slides.length ? 0 : slide2.id + 1;\n        } else {\n            slide2[\"transition\"] = false;\n            slide2[\"position\"] = s.offScreenRight;\n            slide2[\"id\"] = slide1.id + 1 === slides.length ? 0 : slide1.id + 1;\n        }\n        this.setSlideState(slide1, slide2, currentId);\n        this.resetSlideTransitions(slide1, slide2, currentId);\n    };\n\n    resetSlideTransitions = (slide1, slide2, currentId) => {\n        setTimeout(() => {\n            slide1[\"transition\"] = true;\n            slide2[\"transition\"] = true;\n            this.setSlideState(slide1, slide2, currentId);\n        }, 500);\n    };\n\n    render() {\n        const { slide1, slide2, currentId } = this.state;\n        const { slides } = this.props;\n        return (\n            <div className={s.container}>\n                <Slide\n                    image={slides[slide1.id]}\n                    position={slide1.position}\n                    transition={slide1.transition ? s.transition : \"\"}\n                />\n                <Slide\n                    image={slides[slide2.id]}\n                    position={slide2.position}\n                    transition={slide2.transition ? s.transition : \"\"}\n                />\n                <Dots slideId={currentId} slides={slides} />\n            </div>\n        );\n    }\n}\n\nexport default Slideshow;","import React from 'react';\n\nimport  slide1 from '../../Images/img4.jpg';\nimport  slide2 from '../../Images/coco6.jpg';\nimport  slide3 from '../../Images/coco1.jpg';\nimport  slide4 from '../../Images/img.jpg';\nimport  slide5 from '../../Images/img3.jpg';\n\nimport  Coconut1 from '../../Images/coco02.jpg';\nimport  Coconut2 from '../../Images/coco6.jpg';\nimport  Coconut3 from '../../Images/coco9.png';\nimport  Coconut4 from '../../Images/coco1.jpg';\nimport  Coconut5 from '../../Images/coco5.jpg';\nimport  Coconut6 from '../../Images/coco01.jpg';\n\nimport './Home.css';\nimport Slideshow from \"./SlideShow\";\nimport './Custom.css';\n\nconst s = {\n    container: \"screenW screenH dGray col\",\n    header: \"flex1 fCenter fSize2\",\n    main: \"flex8 white\",\n    footer: \"flex1 fCenter\"\n};\n\nconst slides = [slide1, slide2, slide3, slide4, slide5];\n\nconst Home = () => {\n    return(\n        <div className=\"container-fluid mt-3\">\n            <div className=\"row\">\n                <div className=\"col-sm-12 advert\">\n                    <div className={s.container}>\n                        <div className={s.header}>Coconut Master</div>\n                        <div className={s.main}>\n                            <Slideshow slides={slides} />\n                        </div>\n                        <div className={s.footer}></div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-lg-4 col-md-4\">\n                    <img src={Coconut1} alt=\"\" className=\"imgHeight\"/>\n                </div>\n                <div className=\"col-lg-4 col-md-4\">\n                    <img src={Coconut2} alt=\"\" className=\"imgHeight\"/>\n                </div>\n                <div className=\"col-lg-4 col-md-4\">\n                    <img src={Coconut3} alt=\"\" className=\"imgHeight\"/>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-lg-4 col-md-4\">\n                    <img src={Coconut4} alt=\"\" className=\"imgHeight\"/>\n                </div>\n                <div className=\"col-lg-4 col-md-4\">\n                    <img src={Coconut5} alt=\"\" className=\"imgHeight\"/>\n                </div>\n                <div className=\"col-lg-4 col-md-4\">\n                    <img src={Coconut6} alt=\"\" className=\"imgHeight\"/>\n                </div>\n            </div>\n        </div>\n    );\n}\n  \nexport default Home;","import React from 'react'  \n\nimport './NavStyle.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport Register from '../Layout/Register';\nimport About from '../Layout/About';\nimport Home from '../Layout/Home';\nimport  CoconutSVG from '../../Images/coconut.svg'\n\n\nconst Navigation = () => {\n\n    return (  \n      <Router>\n          <nav className=\"d-flex myFlex\">\n            <div className=\"coconutWrap\">\n                <img src={CoconutSVG} alt=\"\" className=\"logoSize\" />\n                <span className=\"coconut\">Coconut</span>\n                <span className=\"master\">Master</span>\n            </div>\n            <ul className=\"d-flex justify-content-around c-b\">\n                <li className=\"ls-none\">\n                <Link to=\"/\" className=\"p-color\">Coconut Master</Link>\n                </li>\n                <li className=\"ls-none\">\n                <Link to=\"/about_us\" className=\"p-color\">About Us</Link>\n                </li>\n                <li className=\"ls-none\">\n                <Link to=\"/register\" className=\"p-color\">Register</Link>\n                </li>\n            </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/about_us\">\n            <About />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>  \n    );  \n}  \n  \nexport default Navigation;","import React from 'react';\n\nimport './Footer.css';\n\nconst Footer = () => {\n    return(\n        <div>\n            <footer className=\"footer\">\n                <h3>copyright 2020 @Daniel Larbi Addo</h3>\n            </footer>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\n\nimport Navigation from '../components/Nav/Nav';\nimport Footer from '../components/Footer/Footer';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}